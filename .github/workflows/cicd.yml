name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov bandit -r requirements.txt

      - name: Run tests with coverage
        run: pytest --cov=app --cov-report=xml
        
      - name: Run security scan (Bandit)
        run: bandit -r .

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test   # run only if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/git-gist:latest
          
      - name: Security scan Docker image (Trivy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/git-gist:latest
          format: 'table'
          exit-code: '0'

  deploy:
    name: Deploy locally
    runs-on: self-hosted
    needs: docker

    steps:
      - name: Pull latest image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/git-gist:latest

      - name: Stop old container
        shell: bash
        run: |
          docker stop git-gist || true
          docker rm git-gist || true

      - name: Run new container
        run: |
            docker run -d --name git-gist -p 8080:8080 \
            -e TOKEN_GITHUB=${{ secrets.TOKEN_GITHUB }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/git-gist:latest